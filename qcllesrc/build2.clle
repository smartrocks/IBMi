/*---------------------------------------------------------------------*/
/* BUILD2 - copy all src from IFS to src PF's and compile              */
/*                                                                     */
/* BUILD must be manually created. Once created it can be run and will */
/* build all remaining components in the library passed in.            */
/*                                                                     */
/* A prerequisite to calling build BUILD is to Git CLONE the source    */
/* code from GitHub https://github.com/smartrocks/IBMi                 */
/*                                                                     */ 
/* Parameters                                                          */
/* &lib      Target library for created objects                        */
/* &ifsPath  Path to IFS folder which contains all source files        */
/*           ex: '/home/dave/smartrocks/ibmi'                          */
/*           where the ibmi folder contains qddssrc, qclsrc, etc.      */
/*---------------------------------------------------------------------*/

pgm (&lib &ifsPath) 

dcl &forever *lgl value('0')
dcl &len *int
dcl &len1 *int
dcl &len2 *int
dcl &lib *char (10)       /* target library    */
dcl &ifsFile *char (256)  /* ifs file path and file name */
dcl &ifsPath *char (256)  /* source IFS folder */  
dcl &ifsSrcPath *char (256) 
dcl &mbrPath *char (256)

dclf IFSLIST 

ovrdbf IFSLIST QTEMP/IFSLIST

callsubr crtNonSrc  /* create non-source based objects          */
callsubr delete_LF  /* delete all PF's for which we have source */
callsubr comp_PF    /* copy source and compile PF's             */
callsubr comp_LF    /* copy source and compile LF's             */
callsubr comp_DSPF  /* copy source and compile DSPF's           */
callsubr comp_SQL   /* copy source for QSQLSRC                  */
callsubr comp_SRV1  /* copy source for QSRVSRC                  */
callsubr comp_SRV2  /* create service programs                  */
callsubr comp_RPGLE /* copy source and compile QRPGLESRC        */
callsubr comp_CLLE  /* copy source and compile QCLLESRC         */
callsubr comp_CMD   /* copy source and compile QCMDSRC          */

/*-------------*/
/* End of Main */
/*-------------*/


/*************************/
/* S U B R O U T I N E S */
/*************************/


/**************************************/
/* create non-source based objects    */
/**************************************/
SUBR SUBR(crtNonSrc) 
    /* create model source files used by the Bluestar MESSAGE *SRVPGM */
    CRTSRCPF FILE(DAVIDKECK1/SRCIN) RCDLEN(92) +
    TEXT('Model Source PF needed by Bluestar Message srvpgm')  
    monmsg (CPF5813 CPF7302)  /* file already exists */

    CRTSRCPF FILE(DAVIDKECK1/SRCOUT) RCDLEN(92) +
    TEXT('Model Source PF needed by Bluestar Message srvpgm') 
    monmsg (CPF5813 CPF7302)  /* file already exists */
ENDSUBR



/******************/
/* Delete LF's    */
/******************/
subr delete_LF
    close   /* close the IFSLIST file */
    chgvar &ifsSrcPath (&ifspath *tcat '/qddssrc')
    IFSLIST &ifsSrcPath /* load PF qtemp/IFSLIST with IFS file names */

    dountil &forever
    rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
    monmsg CPF0864 exec(LEAVE)

    if (&type *ne '*STMF') then(ITERATE)
    chgvar &len %scan('.LF'  &name)
    if (&len *eq 0) then(ITERATE)

    chgvar &len (&len - 1)
    chgvar &name (%sst(&name 1 &len)) /* w/o extension */

    DLTF &LIB/&name
    monmsg CPF2105 /* file not found */

enddo

endsubr



/******************/
/* Compile PF's   */
/******************/
subr comp_PF
close   /* close the IFSLIST file */

dountil &forever
    rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
    monmsg CPF0864 exec(LEAVE)

    if (&type *ne '*STMF') then(ITERATE)
    chgvar &len %scan('.PF'  &name)
    if (&len *eq 0) then(ITERATE)

    chgvar &ifsFile (&ifsPath *tcat '/QDDSSRC/' *tcat &name) 
    chgvar &len (&len - 1)
    chgvar &name (%sst(&name 1 &len)) /* w/o extension */
    chgvar &mbrPath ('/QSYS.LIB/' *tcat &lib +
                    *tcat '.LIB/QDDSSRC.FILE/' + 
                    *tcat &name *tcat '.MBR')

    CPYFRMSTMF FROMSTMF(&ifsFile) +
    TOMBR(&mbrPath) MBROPT(*REPLACE) STMFCCSID(*STMF) DBFCCSID(*FILE)    

    CHGPFM FILE(&LIB/QDDSSRC) MBR(&name) SRCTYPE(PF)

    DLTF &LIB/&name
    monmsg CPF2105 /* file not found */
    CRTPF FILE(&lib/&name) SRCFILE(&lib/QDDSSRC) LVLCHK(*NO)

enddo

endsubr



/******************/
/* Compile LF's   */
/******************/
subr comp_LF
close                 /* close the IFSLIST file */

dountil &forever
    rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
    monmsg CPF0864 exec(LEAVE)

    if (&type *ne '*STMF') then(ITERATE)
    chgvar &len %scan('.LF'  &name)
    if (&len *eq 0) then(ITERATE)

    chgvar &ifsFile (&ifsPath *tcat '/QDDSSRC/' *tcat &name) 
    chgvar &len (&len - 1)
    chgvar &name (%sst(&name 1 &len)) /* w/o extension */
    chgvar &mbrPath ('/QSYS.LIB/' *tcat &lib +
                    *tcat '.LIB/QDDSSRC.FILE/' + 
                    *tcat &name *tcat '.MBR')

    CPYFRMSTMF FROMSTMF(&ifsFile) +
    TOMBR(&mbrPath) MBROPT(*REPLACE) STMFCCSID(*STMF) DBFCCSID(*FILE)    

    CHGPFM FILE(&LIB/QDDSSRC) MBR(&name) SRCTYPE(LF)

    DLTF &LIB/&name
    monmsg CPF2105 /* file not found */
    CRTLF FILE(&lib/&name) SRCFILE(&lib/QDDSSRC) LVLCHK(*NO)

enddo

endsubr



/********************/
/* Compile DSPF's   */
/********************/
subr comp_DSPF
close                 /* close the IFSLIST file */

dountil &forever
    rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
    monmsg CPF0864 exec(LEAVE)

    if (&type *ne '*STMF') then(ITERATE)
    chgvar &len %scan('.DSPF'  &name)
    if (&len *eq 0) then(ITERATE)

    chgvar &ifsFile (&ifsPath *tcat '/QDDSSRC/' *tcat &name) 
    chgvar &len (&len - 1)
    chgvar &name (%sst(&name 1 &len)) /* w/o extension */
    chgvar &mbrPath ('/QSYS.LIB/' *tcat &lib +
                    *tcat '.LIB/QDDSSRC.FILE/' + 
                    *tcat &name *tcat '.MBR')

    CPYFRMSTMF FROMSTMF(&ifsFile) +
    TOMBR(&mbrPath) MBROPT(*REPLACE) STMFCCSID(*STMF) DBFCCSID(*FILE)    

    CHGPFM FILE(&LIB/QDDSSRC) MBR(&name) SRCTYPE(DSPF)

    CRTDSPF FILE(&LIB/&NAME) SRCFILE(&LIB/QDDSSRC) REPLACE(*YES)
enddo

endsubr



/***************************************************************/
/* Copy IFS source for QSQLCSRC to source PF                   */
/***************************************************************/
subr comp_SQL
close                 /* close the IFSLIST file */
chgvar &ifsSrcPath (&ifspath *tcat '/qsqlsrc')
IFSLIST &ifsSrcPath  /* load PF qtemp/IFSLIST with IFS file names */

dountil &forever
    rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
    monmsg CPF0864 exec(LEAVE)

    if (&type *ne '*STMF') then(ITERATE)
    chgvar &len %scan('.SQL'  &name)
    if (&len *eq 0) then(ITERATE)

    chgvar &ifsFile (&ifsPath *tcat '/QSQLSRC/' *tcat &name) 
    chgvar &len (&len - 1)
    chgvar &name (%sst(&name 1 &len)) /* w/o extension */
    chgvar &mbrPath ('/QSYS.LIB/' *tcat &lib +
                    *tcat '.LIB/QSQLSRC.FILE/' + 
                    *tcat &name *tcat '.MBR')

    CPYFRMSTMF FROMSTMF(&ifsFile) +
    TOMBR(&mbrPath) MBROPT(*REPLACE) STMFCCSID(*STMF) DBFCCSID(*FILE)    

    CHGPFM FILE(&LIB/QSQLSRC) MBR(&name) SRCTYPE(SQL)

enddo

endsubr



/****************************************************************/
/* Copy IFS source for QSRVCSRC (service programs) to source PF */
/****************************************************************/
subr comp_SRV1
close                 /* close the IFSLIST file */
chgvar &ifsSrcPath (&ifspath *tcat '/qsrvsrc')
IFSLIST &ifsSrcPath  /* load PF qtemp/IFSLIST with IFS file names */

DLTBNDDIR BNDDIR(&LIB/BLUESTAR)
MONMSG cpf2105
CRTBNDDIR BNDDIR(&LIB/BLUESTAR)
ADDBNDDIRE BNDDIR(&LIB/BLUESTAR) OBJ((&LIB/STRING)) 
ADDBNDDIRE BNDDIR(&LIB/BLUESTAR) OBJ((&LIB/API)) 
ADDBNDDIRE BNDDIR(&LIB/BLUESTAR) OBJ((&LIB/DATE)) 
ADDBNDDIRE BNDDIR(&LIB/BLUESTAR) OBJ((&LIB/MESSAGE)) 
ADDBNDDIRE BNDDIR(&LIB/BLUESTAR) OBJ((&LIB/VALUE)) 

dountil &forever
    rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
    monmsg CPF0864 exec(LEAVE)

    if (&type *ne '*STMF') then(ITERATE)
    chgvar &len %scan('.RPGLE'  &name)
    if (&len *eq 0) then(ITERATE)

    chgvar &ifsFile (&ifsPath *tcat '/QSRVSRC/' *tcat &name) 
    chgvar &len (&len - 1)
    chgvar &name (%sst(&name 1 &len)) /* w/o extension */
    chgvar &mbrPath ('/QSYS.LIB/' *tcat &lib +
                    *tcat '.LIB/QSRVSRC.FILE/' + 
                    *tcat &name *tcat '.MBR')

    CPYFRMSTMF FROMSTMF(&ifsFile) +
    TOMBR(&mbrPath) MBROPT(*REPLACE) STMFCCSID(*STMF) DBFCCSID(*FILE)    

    CHGPFM FILE(&LIB/QSRVSRC) MBR(&name) SRCTYPE(RPGLE)

enddo

endsubr

/****************************************************************/
/* Create service programs based on QSRVCSRC                    */
/* These must be compiled in sequence due to dependencies.      */
/****************************************************************/
subr comp_SRV2
    /* STRING - no dependencies*/ 
    CRTRPGMOD MODULE(&LIB/STRING) SRCFILE(&LIB/QSRVSRC) +
    DBGVIEW(*ALL)                                                             

    CRTSRVPGM SRVPGM(&LIB/STRING) EXPORT(*ALL) ALWLIBUPD(*YES) +    
    OPTION(*DUPPROC)

    /* API - needs STRING */
    CRTRPGMOD MODULE(&LIB/API) SRCFILE(&LIB/QSRVSRC) +
    DBGVIEW(*ALL)                                                            

    CRTSRVPGM SRVPGM(&LIB/API) EXPORT(*ALL) ALWLIBUPD(*YES) +    
    OPTION(*DUPPROC)

    /* MESSAGE - needs STRING */
    CRTRPGMOD MODULE(&LIB/MESSAGE) SRCFILE(&LIB/QSRVSRC) +
    DBGVIEW(*ALL)                                                           

    CRTSRVPGM SRVPGM(&LIB/MESSAGE) EXPORT(*ALL) ALWLIBUPD(*YES) +    
    OPTION(*DUPPROC)

    /* DATE needs API */
    CRTRPGMOD MODULE(&LIB/DATE) SRCFILE(&LIB/QSRVSRC) +
    DBGVIEW(*ALL)                                                          

    CRTSRVPGM SRVPGM(&LIB/DATE) EXPORT(*ALL) ALWLIBUPD(*YES) +    
    OPTION(*DUPPROC)

    /* VALUE - needs MESSAGE*/
    CRTRPGMOD MODULE(&LIB/VALUE) SRCFILE(&LIB/QSRVSRC) +
    DBGVIEW(*ALL)                                                           

    CRTSRVPGM SRVPGM(&LIB/VALUE) EXPORT(*ALL) ALWLIBUPD(*YES) +    
    OPTION(*DUPPROC)

        /* STUDENT2 - REST API POC */
    CRTRPGMOD MODULE(&LIB/STUDENT2) SRCFILE(&LIB/QSRVSRC) +
    DBGVIEW(*ALL)                                                           

    CRTSRVPGM SRVPGM(&LIB/STUDENT2) EXPORT(*ALL) ALWLIBUPD(*YES) +    
    OPTION(*DUPPROC)
    
    
    /* STUDENTRSC - REST API POC */
    CRTRPGMOD MODULE(&LIB/STUDENTRSC) SRCFILE(&LIB/QSRVSRC) +
    DBGVIEW(*ALL)                                                           

    CRTSRVPGM SRVPGM(&LIB/STUDENTRSC) EXPORT(*ALL) ALWLIBUPD(*YES) +    
    OPTION(*DUPPROC)

endsubr



/*********************/
/* Compile RPGLE's   */
/*********************/
subr comp_RPGLE
close                 /* close the IFSLIST file */
chgvar &ifsSrcPath (&ifspath *tcat '/qrpglesrc')
IFSLIST &ifsSrcPath  /* load PF qtemp/IFSLIST with IFS file names */

dountil &forever
    rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
    monmsg CPF0864 exec(LEAVE)

    if (&type *ne '*STMF') then(ITERATE)
    chgvar &name %upper(&name)
    chgvar &len1 %scan('.RPGLE'  &name)
    chgvar &len2 %scan('.SQLRPGLE'  &name)
    if ((&len1 *eq 0) *and (&len2 *eq 0)) then(ITERATE)

    chgvar &ifsFile (&ifsPath *tcat '/QRPGLESRC/' *tcat &name) 
    chgvar &len (&len1 + &len2 - 1) /* because either &len1 or &len2 will be zero */
    chgvar &name (%sst(&name 1 &len)) /* w/o extension */
    chgvar &mbrPath ('/QSYS.LIB/' *tcat &lib +
                    *tcat '.LIB/QRPGLESRC.FILE/' + 
                    *tcat &name *tcat '.MBR')

    CPYFRMSTMF FROMSTMF(&ifsFile) +
    TOMBR(&mbrPath) MBROPT(*REPLACE) STMFCCSID(*STMF) DBFCCSID(*FILE)  

  if (&len1 *gt 0) then(do)
    CHGPFM FILE(&LIB/QRPGLESRC) MBR(&name) SRCTYPE(RPGLE)

    CRTBNDRPG PGM(&LIB/&NAME) SRCFILE(&LIB/QRPGLESRC) +
        DBGVIEW(*ALL) REPLACE(*YES) 
  enddo
  else (do)
     CHGPFM FILE(&LIB/QRPGLESRC) MBR(&name) SRCTYPE(SQLRPGLE)

     CRTSQLRPGI OBJ(&LIB/&NAME) SRCFILE(&lib/QRPGLESRC) + 
     SRCMBR(&name) COMMIT(*NONE) OBJTYPE(*PGM) REPLACE(*YES) DBGVIEW(*SOURCE)   
enddo

enddo

endsubr



/*********************/
/* Compile CLLE's   */
/*********************/
subr comp_CLLE
close                 /* close the IFSLIST file */
chgvar &ifsSrcPath (&ifspath *tcat '/qcllesrc')
IFSLIST &ifsSrcPath  /* load PF qtemp/IFSLIST with IFS file names */

dountil &forever
    rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
    monmsg CPF0864 exec(LEAVE)

    if (&type *ne '*STMF') then(ITERATE)
    chgvar &len %scan('.CLLE'  &name)
    if (&len *eq 0) then(ITERATE)

    chgvar &ifsFile (&ifsPath *tcat '/QCLLESRC/' *tcat &name) 
    chgvar &len (&len - 1)
    chgvar &name (%sst(&name 1 &len)) /* w/o extension */
    chgvar &mbrPath ('/QSYS.LIB/' *tcat &lib +
                    *tcat '.LIB/QCLLESRC.FILE/' + 
                    *tcat &name *tcat '.MBR')

    CPYFRMSTMF FROMSTMF(&ifsFile) +
    TOMBR(&mbrPath) MBROPT(*REPLACE) STMFCCSID(*STMF) DBFCCSID(*FILE)    

    CHGPFM FILE(&LIB/QCLLESRC) MBR(&name) SRCTYPE(CLLE)

    CRTBNDCL PGM(&LIB/&NAME) SRCFILE(&LIB/QCLLESRC) DFTACTGRP(*NO) +
    ACTGRP(QILE) DBGVIEW(*ALL)                                                                                                                             
enddo

endsubr



/*******************/
/* Compile CMD's   */
/*******************/
subr comp_CMD
close                 /* close the IFSLIST file */
chgvar &ifsSrcPath (&ifspath *tcat '/qcmdsrc')
IFSLIST &ifsSrcPath  /* load PF qtemp/IFSLIST with IFS file names */

dountil &forever
    rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
    monmsg CPF0864 exec(LEAVE)

    if (&type *ne '*STMF') then(ITERATE)
    chgvar &len %scan('.CMD'  &name)
    if (&len *eq 0) then(ITERATE)

    chgvar &ifsFile (&ifsPath *tcat '/QCMDSRC/' *tcat &name) 
    chgvar &len (&len - 1)
    chgvar &name (%sst(&name 1 &len)) /* w/o extension */
    chgvar &mbrPath ('/QSYS.LIB/' *tcat &lib +
                    *tcat '.LIB/QCMDSRC.FILE/' + 
                    *tcat &name *tcat '.MBR')

    CPYFRMSTMF FROMSTMF(&ifsFile) +
    TOMBR(&mbrPath) MBROPT(*REPLACE) STMFCCSID(*STMF) DBFCCSID(*FILE)    

    CHGPFM FILE(&LIB/QCLLESRC) MBR(&name) SRCTYPE(CMD) 

    CRTCMD CMD(&LIB/&NAME) PGM(&LIB/&NAME) SRCFILE(&LIB/QCMDSRC)                                                                  
enddo


endsubr


endpgm
/*---------------------------------------------------------------------*/
/* BUILD2 - copy all src from IFS to src PF's and compile              */
/*                                                                     */
/* BUILD must be manually created. Once created it can be run and will */
/* build all remaining components in the library passed in.            */
/*                                                                     */
/* A prerequisite to calling build BUILD is to Git CLONE the source    */
/* code from GitHub https://github.com/smartrocks/IBMi                 */
/*                                                                     */ 
/* Parameters                                                          */
/* &lib      Target library for created objects                        */
/* &ifsPath  Path to IFS folder which contains all source files        */
/*           ex: '/home/dave/smartrocks/ibmi'                          */
/*           where the ibmi folder contains qddssrc, qclsrc, etc.      */
/*---------------------------------------------------------------------*/

pgm (&lib &ifsPath) 

dcl &lib *char (10)       /* target library    */
dcl &ifsPath *char (256)  /* source IFS folder */  
dcl &ifsFile *char (256)  /* ifs file path and file name */
dcl &mbrPath *char (256)
dcl &ifsSrcPath *char (256) 
dcl &pigsFly *lgl value('0')
dcl &len *int

dclf IFSLIST 

chgvar &ifsPath %trim(&ifspath)
chgvar &ifsSrcPath (&ifspath *tcat '/qddssrc')
IFSLIST &ifsSrcPath
ovrdbf IFSLIST QTEMP/IFSLIST

callsubr delete_LF  /* delete all PF's for which we have source */
callsubr comp_PF    /* copy source and compile PF's             */
callsubr comp_LF    /* copy source and compile LF's             */
callsubr comp_DSPF  /* copy source and compile DSPF's           */
callsubr comp_SRV   /* copy source for QSRVSRV                  */


/******************/
/* Delete LF's    */
/******************/
subr delete_LF
close   /* close the IFSLIST file */

dountil &pigsFly
rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
monmsg CPF0864 exec(LEAVE)

if (&type *ne '*STMF') then(ITERATE)
chgvar &len %scan('.LF'  &name)
if (&len *eq 0) then(ITERATE)

chgvar &len (&len - 1)
chgvar &name (%sst(&name 1 &len)) /* w/o extension */

DLTF &LIB/&name
monmsg CPF2105 /* file not found */

enddo

endsubr



/******************/
/* Compile PF's   */
/******************/
subr comp_PF
close   /* close the IFSLIST file */

dountil &pigsFly
rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
monmsg CPF0864 exec(LEAVE)

if (&type *ne '*STMF') then(ITERATE)
chgvar &len %scan('.PF'  &name)
if (&len *eq 0) then(ITERATE)

chgvar &ifsFile (&ifsPath *tcat '/QDDSSRC/' *tcat &name) 
chgvar &len (&len - 1)
chgvar &name (%sst(&name 1 &len)) /* w/o extension */
chgvar &mbrPath ('/QSYS.LIB/' *tcat &lib +
                  *tcat '.LIB/QDDSSRC.FILE/' + 
                  *tcat &name *tcat '.MBR')

CPYFRMSTMF FROMSTMF(&ifsFile) +
TOMBR(&mbrPath) MBROPT(*REPLACE) STMFCCSID(*STMF) DBFCCSID(*FILE)    

CHGPFM FILE(&LIB/QDDSSRC) MBR(&name) SRCTYPE(PF)

DLTF &LIB/&name
monmsg CPF2105 /* file not found */
CRTPF FILE(&lib/&name) SRCFILE(&lib/QDDSSRC) LVLCHK(*NO)

enddo

endsubr



/******************/
/* Compile LF's   */
/******************/
subr comp_LF
close                 /* close the IFSLIST file */

dountil &pigsFly
rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
monmsg CPF0864 exec(LEAVE)

if (&type *ne '*STMF') then(ITERATE)
chgvar &len %scan('.LF'  &name)
if (&len *eq 0) then(ITERATE)

chgvar &ifsFile (&ifsPath *tcat '/QDDSSRC/' *tcat &name) 
chgvar &len (&len - 1)
chgvar &name (%sst(&name 1 &len)) /* w/o extension */
chgvar &mbrPath ('/QSYS.LIB/' *tcat &lib +
                  *tcat '.LIB/QDDSSRC.FILE/' + 
                  *tcat &name *tcat '.MBR')

CPYFRMSTMF FROMSTMF(&ifsFile) +
TOMBR(&mbrPath) MBROPT(*REPLACE) STMFCCSID(*STMF) DBFCCSID(*FILE)    

CHGPFM FILE(&LIB/QDDSSRC) MBR(&name) SRCTYPE(LF)

DLTF &LIB/&name
monmsg CPF2105 /* file not found */
CRTLF FILE(&lib/&name) SRCFILE(&lib/QDDSSRC) LVLCHK(*NO)

enddo

endsubr



/********************/
/* Compile DSPF's   */
/********************/
subr comp_DSPF
close                 /* close the IFSLIST file */

dountil &pigsFly
rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
monmsg CPF0864 exec(LEAVE)

if (&type *ne '*STMF') then(ITERATE)
chgvar &len %scan('.DSPF'  &name)
if (&len *eq 0) then(ITERATE)

chgvar &ifsFile (&ifsPath *tcat '/QDDSSRC/' *tcat &name) 
chgvar &len (&len - 1)
chgvar &name (%sst(&name 1 &len)) /* w/o extension */
chgvar &mbrPath ('/QSYS.LIB/' *tcat &lib +
                  *tcat '.LIB/QDDSSRC.FILE/' + 
                  *tcat &name *tcat '.MBR')

CPYFRMSTMF FROMSTMF(&ifsFile) +
TOMBR(&mbrPath) MBROPT(*REPLACE) STMFCCSID(*STMF) DBFCCSID(*FILE)    

CHGPFM FILE(&LIB/QDDSSRC) MBR(&name) SRCTYPE(DSPF)

CRTDSPF FILE(&LIB/&NAME) SRCFILE(&LIB/QDDSSRC) REPLACE(*YES)
enddo

endsubr



/*********************************************/
/* Copy IFS source for QSRVCSRC to source PF */
/*********************************************/
subr comp_SRV
close                 /* close the IFSLIST file */

dountil &pigsFly
rcvf RCDFMT(IFSLISTR) /* get columns NAME and TYPE */
monmsg CPF0864 exec(LEAVE)

if (&type *ne '*STMF') then(ITERATE)
chgvar &len %scan('.BND'  &name)
if (&len *eq 0) then(ITERATE)

chgvar &ifsFile (&ifsPath *tcat '/QSRVSRC/' *tcat &name) 
chgvar &len (&len - 1)
chgvar &name (%sst(&name 1 &len)) /* w/o extension */
chgvar &mbrPath ('/QSYS.LIB/' *tcat &lib +
                  *tcat '.LIB/QBNDSRC.FILE/' + 
                  *tcat &name *tcat '.MBR')

CPYFRMSTMF FROMSTMF(&ifsFile) +
TOMBR(&mbrPath) MBROPT(*REPLACE) STMFCCSID(*STMF) DBFCCSID(*FILE)    

CHGPFM FILE(&LIB/QSRVSRC) MBR(&name) SRCTYPE(BND)

enddo

endsubr

endpgm